import Head from "next/head";
import styles from "../styles/Home.module.css";
import HomeSwiper from "../components/HomeSwiper";
import { useEffect, useState } from "react";
import { toast } from "react-toastify";
import {
  getCategories,
  getSingleMeals,
  packedMeals,
  getTiffins,
} from "../services/apiServices";
import CartModal from "../components/common/CartModal";
import { useRouter } from "next/router";

export const Home = ({ quantity, setQuantity }) => {
  const [categories, setCategories] = useState();
  const [singleMeal, setSingleMeal] = useState();
  const [packedMeal, setPackedMeal] = useState();
  const [tiffinData, setTiffinData] = useState();
  const [dietFood, setDietFood] = useState();
  const [cartModal, setCartModal] = useState(false);
  const [selectedItem, setSelectedItem] = useState();
  const [expandedData, setExpandedData] = useState();

  const router = useRouter();

  useEffect(() => {
    getAllCategories();
    getAllSingleMeals();
    getAllPackedMeals();
    getAllTiffinData();
  }, []);

  // ------functions for api calling-------

  const getAllCategories = () => {
    getCategories()
      .then((res) => {
        if (res?.status === 200) {
          setCategories(res?.data);
        }
      })
      .catch((err) => toast.error(err));
  };

  const getAllSingleMeals = () => {
    getSingleMeals()
      .then((res) => {
        if (res?.status === 200) {
          setSingleMeal(res?.data);
        }
      })
      .catch((err) => toast.error(err));
  };

  const getAllPackedMeals = () => {
    packedMeals()
      .then((res) => {
        if (res?.status === 200) {
          setPackedMeal(res?.data);
        }
      })
      .catch((err) => toast.error(err));
  };

  const getAllTiffinData = () => {
    getTiffins()
      .then((res) => {
        if (res?.status === 200) {
          setTiffinData(res?.data);
        }
      })
      .catch((err) => toast.error(err));
  };

  return (
    <>
      <CartModal
        isOpen={cartModal}
        closeModal={() => setCartModal(false)}
        selectedItem={selectedItem}
        setSelectedItem={setSelectedItem}
        quantity={quantity}
        setQuantity={setQuantity}
      />
      <Head>
        <title>Book your Tiffin</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div className={styles.home_page}>
        <HomeSwiper />
        <div className={styles.page_header}>
          <div className={styles.category_row}>
            <h1 className={styles.page_heading}>Categories</h1>
            <div className={styles.category_list}>
              {categories?.map((ele) => {
                return (
                  <div className={styles.category_item} onClick={()=> router.push(`/category/${ele?.slug}`)}>
                    <img
                      src={ele?.imgUrl}
                      alt="category"
                      className={`${styles.category_image}`}
                    />
                    <p className={styles.item_name}>{ele?.slug}</p>
                  </div>
                );
              })}
            </div>
          </div>

          {singleMeal && (
            <div style={{ marginTop: "4rem" }}>
              <h3 className={styles.meal_type}>
                Single Meal{" "}
                <span className={styles.view_all_text}>View All</span>
              </h3>
              <div className={styles.meal_container}>
                {singleMeal?.map((ele) => {
                  return (
                    <div key={ele?._id} className={styles.food_container}>
                      <img
                        src={ele?.img}
                        alt={ele?.slug}
                        className={styles.food_items_img}
                      />
                      <div
                        style={{
                          display: "flex",
                          gap: "1rem",
                          marginTop: "2rem",
                        }}
                      >
                        <span className={styles.d_price}>
                          ₹{ele?.discount_price}
                        </span>
                        <span className={styles.price}>₹{ele?.price}</span>
                        <span className={styles.percent_off}>{`${Math.round(
                          ((ele?.price - ele?.discount_price) * 100) /
                            ele?.price
                        )}%`}</span>
                      </div>
                      <p>{ele?.title}</p>
                      <button
                        className={styles.cart_btn}
                        onClick={() => (
                          setSelectedItem(ele), setCartModal(true)
                        )}
                      >
                        Add to cart
                      </button>
                    </div>
                  );
                })}
              </div>
            </div>
          )}

          {packedMeal && (
            <div style={{ marginTop: "4rem" }}>
              <h3 className={styles.meal_type}>Packed Meal</h3>
              <div className={styles.meal_container}>
                {packedMeal?.map((ele) => {
                  return (
                    <div key={ele?._id} className={styles.food_container}>
                      <img
                        src={ele?.img}
                        alt={ele?.slug}
                        className={styles.food_items_img}
                      />
                      <div
                        style={{
                          display: "flex",
                          gap: "1rem",
                          marginTop: "2rem",
                        }}
                      >
                        <span className={styles.d_price}>
                          ₹{ele?.discount_price}
                        </span>
                        <span className={styles.price}>₹{ele?.price}</span>
                        <span className={styles.percent_off}>{`${Math.round(
                          ((ele?.price - ele?.discount_price) * 100) /
                            ele?.price
                        )}%`}</span>
                      </div>
                      <p>{ele?.title}</p>
                      <button
                        className={styles.cart_btn}
                        onClick={() => (
                          setSelectedItem(ele), setCartModal(true)
                        )}
                      >
                        Add to cart
                      </button>
                    </div>
                  );
                })}
              </div>
            </div>
          )}

          {tiffinData && (
            <div style={{ marginTop: "4rem" }}>
              <h3 className={styles.meal_type}>Tiffin</h3>
              <div className={styles.meal_container}>
                {tiffinData?.map((ele) => {
                  return (
                    <div key={ele?._id} className={styles.food_container}>
                      <img
                        src={ele?.img}
                        alt={ele?.slug}
                        className={styles.food_items_img}
                      />
                      <div
                        style={{
                          display: "flex",
                          gap: "1rem",
                          marginTop: "2rem",
                        }}
                      >
                        <span className={styles.d_price}>
                          ₹{ele?.discount_price}
                        </span>
                        <span className={styles.price}>₹{ele?.price}</span>
                        <span className={styles.percent_off}>{`${Math.round(
                          ((ele?.price - ele?.discount_price) * 100) /
                            ele?.price
                        )}%`}</span>
                      </div>
                      <p>{ele?.title}</p>
                      <button
                        className={styles.cart_btn}
                        onClick={() => (
                          setSelectedItem(ele), setCartModal(true)
                        )}
                      >
                        Add to cart
                      </button>
                    </div>
                  );
                })}
              </div>
            </div>
          )}

          {dietFood && (
            <div style={{ marginTop: "4rem" }}>
              <h3 className={styles.meal_type}>Diet Food</h3>
              <div className={styles.meal_container}></div>
            </div>
          )}
        </div>
      </div>
    </>
  );
};

export default Home;
